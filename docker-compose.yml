services:
  # Attack scenario (vulnerable)
  vuln-victim:
    build:
      context: .
      dockerfile: dockerfiles/ubuntu-victim.Dockerfile
    container_name: vuln-victim
    networks:
      attack_network:
        ipv4_address: 172.20.0.2
    cap_add:
      - NET_ADMIN
    stdin_open: true
    tty: true
    privileged: true
    sysctls:
      - net.ipv4.icmp_echo_ignore_broadcasts=0
      - net.ipv4.conf.all.rp_filter=0  # Changed to 0 to make it vulnerable
      - net.ipv4.conf.eth0.rp_filter=0

  vuln-amplifier:
    build:
      context: .
      dockerfile: dockerfiles/ubuntu-amplifier.Dockerfile
    container_name: vuln-amplifier
    networks:
      attack_network:
        ipv4_address: 172.20.0.3
    cap_add:
      - NET_ADMIN
    stdin_open: true
    tty: true
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.icmp_echo_ignore_broadcasts=0
      - net.ipv4.conf.all.rp_filter=0  # Changed to 0 to make it vulnerable
      - net.ipv4.conf.eth0.rp_filter=0
    privileged: true

  vuln-attacker:
    build:
      context: .
      dockerfile: dockerfiles/kali-attacker.Dockerfile
    container_name: vuln-attacker
    networks:
      attack_network:
        ipv4_address: 172.20.0.4
    cap_add:
      - NET_ADMIN
    stdin_open: true
    tty: true
    volumes:
      - ./attack_scripts:/attack_scripts

  # Defense scenario (protected)
  prot-victim:
    build:
      context: .
      dockerfile: dockerfiles/ubuntu-victim.Dockerfile
    container_name: prot-victim
    networks:
      defense_network:
        ipv4_address: 172.21.0.2
    cap_add:
      - NET_ADMIN
    stdin_open: true
    tty: true
    privileged: true
    sysctls:
      - net.ipv4.icmp_echo_ignore_broadcasts=1
      - net.ipv4.conf.all.rp_filter=1
      - net.ipv4.conf.eth0.rp_filter=1
    # Added entrypoint script
    command: >
      bash -c "
        echo 'Configuring victim protection against Smurf attacks...'
        # Block all ICMP echo replies (these are what flood the victim in Smurf)
        iptables -A INPUT -p icmp --icmp-type echo-reply -j DROP
        # Log for demonstration
        echo 'Victim protection configured!'
        /bin/bash
      "

  prot-amplifier:
    build:
      context: .
      dockerfile: dockerfiles/ubuntu-amplifier.Dockerfile
    container_name: prot-amplifier
    networks:
      defense_network:
        ipv4_address: 172.21.0.3
    cap_add:
      - NET_ADMIN
    stdin_open: true
    tty: true
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.icmp_echo_ignore_broadcasts=1
      - net.ipv4.conf.all.rp_filter=1
      - net.ipv4.conf.eth0.rp_filter=1
    privileged: true
    # Added entrypoint script
    command: >
      bash -c "
        echo 'Configuring amplifier protection against Smurf attacks...'
        # Block forwarding to broadcast addresses
        iptables -A FORWARD -d 172.21.255.255 -j DROP
        # Log for demonstration
        echo 'Amplifier protection configured!'
        /bin/bash
      "

  prot-attacker:
    build:
      context: .
      dockerfile: dockerfiles/kali-attacker.Dockerfile
    container_name: prot-attacker
    networks:
      defense_network:
        ipv4_address: 172.21.0.4
    cap_add:
      - NET_ADMIN
    stdin_open: true
    tty: true
    volumes:
      - ./attack_scripts:/attack_scripts

networks:
  attack_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
  defense_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16